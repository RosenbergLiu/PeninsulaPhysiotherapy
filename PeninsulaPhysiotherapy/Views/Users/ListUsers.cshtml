@using Microsoft.AspNetCore.Identity
@model IEnumerable<IdentityUser>
@inject RoleManager<IdentityRole> roleManager
@inject UserManager<IdentityUser> userManager

@{
    ViewBag.Title = "All Users";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var roles = roleManager.Roles;
    var users = userManager.Users;
}
<h1 class="text-center display-4">User Management</h1>
<a class="btn btn-primary mb-3" style="width:auto" href="/Identity/Account/Register">
    Create User
</a>
<br />

<form method="get" class="col-sm-6">
    <div class="input-group">
        <input class="form-control" type="text" name="id"/>
        <div class="input-group-append">
            <input class="btn btn-primary" type="submit" value="Search" />
        </div>
    </div>
    @if (!String.IsNullOrEmpty(ViewBag.Search)){
        <br />
        <input type="submit" class="btn btn-danger" value="Clear @ViewBag.Search">
    }
</form>

<hr />
<br />
@if(Model.Any()){
    <table class="table">
        <thead>
            <tr>
                <th>
                    User Name
                </th>
                <th>
                    User Role
                </th>
                <th>
                    Email Confirmed
                </th>
                <th>
                    Action
                </th>
            </tr>
        </thead>
        <tbody>
        @foreach(var user in Model){
            <tr>
            <td>
                @user.UserName
            </td>
            <td>
                        @{
                            ViewBag.RoleList = "";
                            foreach (string role in ViewBag.UserRole[user.UserName])
                            {
                                ViewBag.RoleList = ViewBag.RoleList + role + ", ";
                            }
                            if (ViewBag.RoleList == "")
                            {
                                ViewBag.RoleList = "Guest";
                            }else{
                                ViewBag.RoleList = ViewBag.RoleList.Remove(ViewBag.RoleList.Length - 2);
                            }
                        }
                @ViewBag.RoleList
            </td>
            <td>
                @user.EmailConfirmed
            </td>
            <td>
                <form method="post" asp-action="DeleteUser" asp-route-id="@user.Id">
                    <a class="btn btn-outline-primary btn-sm" asp-controller="Users" asp-action="EditUser" asp-route-id="@user.Id">Edit</a> |
                    
                            <button class='centerMe'>
                                <div class='icon'>
                                    <i class='fa fa-trash-o'></i>
                                    <i class='fa fa-question'></i>
                                    <i class='fa fa-check'></i>
                                </div>
                                <div class='text'>
                                    <span>Delete</span>
                                </div>
                            </button>
                </form>
                
            </td>
            
            </tr>
        }
        </tbody>
    </table>
    
       
}else{
    <h2>No User Matched</h2>
}

<script>
    $("button").click(function () {
        if ($(this).hasClass("confirm")) {
            $(this).addClass("done");
            $("span").text("Deleted");
        } else {
            $(this).addClass("confirm");
            $("span").text("Are you sure?");
        }
    });

    // Reset
    $("button").on('mouseout', function () {
        if ($(this).hasClass("confirm") || $(this).hasClass("done")) {
            setTimeout(function () {
                $("button").removeClass("confirm").removeClass("done");
                $("span").text("Delete");
            }, 3000);
        }
    });
</script>